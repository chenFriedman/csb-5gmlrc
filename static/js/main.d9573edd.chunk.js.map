{"version":3,"sources":["App.js","index.js"],"names":["App","useState","tvName","setTvName","tvDataResult","setTvDataResult","search","a","axios","get","selectTv","console","log","data","show","image","medium","selectedTv","map","tvShow","name","src","alt","status","id","className","type","value","placeholder","onChange","e","target","onClick","rootElement","document","getElementById","createRoot","render"],"mappings":"gLAoBe,SAASA,IACtB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAwCF,mBAAS,MAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KAEMC,EAAM,uCAAG,8BAAAC,EAAA,sEACUC,IAAMC,IAAN,gDACoBP,IAF9B,OACPQ,EADO,OAIbC,QAAQC,IAAIF,EAASG,KAAK,GAAGC,KAAKC,MAAMC,QAClCC,EAAaP,EAASG,KAAKK,KAAI,SAACC,GAAD,eACnC,+BACE,4BAAIA,EAAOL,KAAKM,OAChB,qBAAKC,IAAG,OAAEF,QAAF,IAAEA,GAAF,UAAEA,EAAQL,YAAV,iBAAE,EAAcC,aAAhB,aAAE,EAAqBC,OAAQM,IAAI,KAC3C,yCAAYH,EAAOL,KAAKS,YAHjBJ,EAAOL,KAAKU,OAMvBnB,EAAgBY,GAZH,2CAAH,qDAcZ,OACE,sBAAKQ,UAAU,MAAf,UACE,qCACA,uBACEC,KAAK,OACLC,MAAOzB,EACP0B,YAAY,SACZC,SAAU,SAACC,GAAD,OAAO3B,EAAU2B,EAAEC,OAAOJ,UAEtC,wBAAQK,QAAS,kBAAM1B,KAAvB,mBACkB,OAAjBF,GAAyB,6BAAKA,OC3CrC,IAAM6B,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAD,UACE,cAACrC,EAAD,S","file":"static/js/main.d9573edd.chunk.js","sourcesContent":["/*\n  We'd like to have a nice web app \n  to search for information on our favorite TV shows.\n\n  What we want you to build:\n  - A search box where the user can enter the name \n    of TV show they want to look up\n  - A list of results showing the name of the show, \n    the show's poster and if the show is still ongoing \n    \n  For that, we'll use the following api:\n  https://api.tvmaze.com/search/shows?q={search_term}\n\n  (docs: https://www.tvmaze.com/api)\n*/\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function App() {\n  const [tvName, setTvName] = useState(\"\");\n  const [tvDataResult, setTvDataResult] = useState(null);\n\n  const search = async () => {\n    const selectTv = await axios.get(\n      `https://api.tvmaze.com/search/shows?q=${tvName}`\n    );\n    console.log(selectTv.data[0].show.image.medium);\n    const selectedTv = selectTv.data.map((tvShow) => (\n      <li key={tvShow.show.id}>\n        <p>{tvShow.show.name}</p>\n        <img src={tvShow?.show?.image?.medium} alt=\"\" />\n        <p>status: {tvShow.show.status}</p>\n      </li>\n    ));\n    setTvDataResult(selectedTv);\n  };\n  return (\n    <div className=\"App\">\n      <h1>tv </h1>\n      <input\n        type=\"text\"\n        value={tvName}\n        placeholder=\"search\"\n        onChange={(e) => setTvName(e.target.value)}\n      ></input>\n      <button onClick={() => search()}>serch</button>\n      {tvDataResult !== null && <ul>{tvDataResult}</ul>}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}